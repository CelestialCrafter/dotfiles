#!/usr/bin/env python
import sys, os, subprocess

# COMPUTATION
def get_image_size():
    completed = subprocess.run(['magick', 'identify', '-ping', '-format', '%w %h', wallpaper], text=True, capture_output=True)
    completed.check_returncode()
    split_stdout = completed.stdout.split(' ')
    return int(split_stdout[0]), int(split_stdout[1])

def generate_images():
    if not os.path.exists(wallpaper_output_dir):
        os.makedirs(wallpaper_output_dir)

    for i in range(image_span_tags):
        subprocess.run(['magick', 'convert', wallpaper, '-crop', f'{image_width}x{adjusted_monitor_height}+0+{i * y_offset}', os.path.join(wallpaper_output_dir, f'{i}.jpg')])

# INPUTS
wallpaper = os.path.expandvars('$HOME/Pictures/Wallpapers/kitties.jpg')
wallpaper_output_dir = os.path.expandvars('$HOME/.cache/wallpaper-scroll')
monitor_width = 1920
monitor_height = 1080
image_width, image_height = get_image_size()
image_span_tags = 4 # 1-based

# INTERMEDIATE
ratio = image_width / monitor_width
adjusted_monitor_height = ratio * monitor_height

# OUTPUTS
y_offset = (image_height - adjusted_monitor_height) / (image_span_tags - 1)

generate_images()
